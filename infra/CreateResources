# A. Make sure the CLI won't page output (prevents "stuck" feeling)
export AWS_PAGER=""
aws configure set cli_pager ""

# B. Set a region and generate unique names (edit PROJECT if you like)
PROJECT="web-demo"
REGION="eu-central-1"
ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text --no-cli-pager)
BUCKET="tfstate-${PROJECT}-${ACCOUNT_ID}-$(date +%s)"
TABLE="tf-locks-${PROJECT}"

echo "Using:"
echo "  REGION = $REGION"
echo "  BUCKET = $BUCKET"
echo "  TABLE  = $TABLE"

# C. Create the S3 bucket for Terraform state
aws s3api create-bucket \
  --bucket "$BUCKET" \
  --region "$REGION" \
  --create-bucket-configuration LocationConstraint="$REGION" \
  --no-cli-pager

# D. Block all public access on the bucket
aws s3api put-public-access-block \
  --bucket "$BUCKET" \
  --public-access-block-configuration BlockPublicAcls=true,IgnorePublicAcls=true,BlockPublicPolicy=true,RestrictPublicBuckets=true \
  --no-cli-pager

# E. Enable versioning (so you can roll back state if needed)
aws s3api put-bucket-versioning \
  --bucket "$BUCKET" \
  --versioning-configuration Status=Enabled \
  --no-cli-pager

# F. Enable default encryption (AES256 is fine)
aws s3api put-bucket-encryption \
  --bucket "$BUCKET" \
  --server-side-encryption-configuration '{"Rules":[{"ApplyServerSideEncryptionByDefault":{"SSEAlgorithm":"AES256"}}]}' \
  --no-cli-pager

# G. Create the DynamoDB table for state locking
aws dynamodb create-table \
  --table-name "$TABLE" \
  --attribute-definitions AttributeName=LockID,AttributeType=S \
  --key-schema AttributeName=LockID,KeyType=HASH \
  --billing-mode PAY_PER_REQUEST \
  --no-cli-pager

# H. Quick verification
aws s3api head-bucket --bucket "$BUCKET" --no-cli-pager && echo "Bucket OK"
aws dynamodb describe-table --table-name "$TABLE" --query "Table.TableStatus" --output text --no-cli-pager
